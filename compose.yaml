# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  db:
    image: postgres:latest
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: vkms_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: gunicorn 'portfolio.wsgi:application' --bind=0.0.0.0:8000
    expose:
      - 8000
    volumes:
      # - .:/app
      - static_volume:/app/staticfiles
    depends_on:
        db:
          condition: service_healthy

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - 1337:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
    depends_on:
      - web
volumes:
  db-data:
  static_volume:
# secrets:
#   db-password:
#     file: db/password.txt

